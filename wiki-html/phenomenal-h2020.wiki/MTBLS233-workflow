<h1>MTBLS233 with PhenoMeNal Jupyter</h1>

<p>In this page we introduce an OpenMS preprocessing workflow, and R downstream analysis that you can run using the Jupyter fronted, that is provided by PhenoMeNal.</p>

<h2>Introduction</h2>

<p>The aim of <a href="http://www.sciencedirect.com/science/article/pii/S000326701630647X">the study</a> performed on MTBLS233 was to produce quantitative information of the highest possible number of reliable features in untargeted metabolomics. Three different approaches of mass spectromic acquisition parameter tuning were tested to see which gave the highest number of spectral features.</p>

<p>In this proof-of-principle workflow we recreate the workflow used in the MTBLS233 study in a distributed manner to run on the PhenoMeNal platform. The workflow was originally implemeted in <a href="https://www.openms.de/">OpenMS</a> v. 1.1.1. followed by the downstream analysis in <a href="https://www.knime.org/">KNIME</a>. Here we fire up and controll the pipeline with Jupyter where the preprocessing in OpenMS has been wrapped in Docker containers to facilitate scaling, and the downstream analysis written in R has been extracted and implemented directly in Jupyter.</p>

<h2>Run the preprocessing workflow</h2>

<p>Start by opening Jupyter in your browser at: </p>

<p><code>http://notebook.&lt;deployment-id&gt;.phenomenal.cloud/</code></p>

<h3>Ingest the MTBLS233 dataset from MetaboLights</h3>

<p><a href="http://www.ebi.ac.uk/metabolights/">MetaboLights</a> offers an FTP service, so we can ingest the MTBLS233 dataset with Linux commands. </p>

<ol>
<li>First open a Jupyter terminal: <code>New &gt; Terminal</code></li>
<li>Ingest the dataset using <strong>wget</strong>:</li>
</ol>

<pre><code>wget ftp://anonymous@ftp.ebi.ac.uk/pub/databases/metabolights/studies/public/MTBLS233/*.mzML -P MTBLS233/data/
</code></pre>

<h3>Run the preprocessing workflow with Luigi</h3>

<p>In order to run the preprocessing analysis we use the <a href="https://github.com/spotify/luigi">Luigi</a> wrokflow system. Please notice that this is a heavy analysis, and to run it successfully you will have to deploy a moderately large number of fat nodes in your cloud provider. To run the preprocessing workflow please run:</p>

<pre><code>cd MTBLS233 
export PYTHONPATH=./ 
luigi --module preprocessing_workflow AllGroups \
  --scheduler-host luigi.default \
  --workers &lt;parallelism-level&gt;
</code></pre>

<blockquote>
  <p><strong>Warning</strong>: Remember to substitute <code>&lt;parallelism-level&gt;</code> with the number of parallel processes that you aim to spawn in the cluster</p>
</blockquote>

<p>If everithing goes well you'll be able to monitor the progress of your analysis at:</p>

<p><code>http://luigi.&lt;deployment-id&gt;.phenomenal.cloud/</code></p>

<h2>Run the downstream analysis</h2>

<p>To open the downstream analysis notebook, please go to: </p>

<p><code>MTBLS233 &gt; downstream-analysis &gt; downstream-analysis.ipynb</code> </p>

<p>The CSV output generated by the TextExporter in OpenMS will be saved in the <code>MTBLS233/results</code> directory and it is set as input in their respective mass range.</p>

<p>To run the workflow click <code>Cell &gt; Run All</code>.</p>

<p>After successfully running the whole workflow you may change the parameters to see the impact on the result.</p>
